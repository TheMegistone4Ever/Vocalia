name: 'Java CI with Maven and Qodana - Code Inspection'

on:
  push:
    branches: [ "master", "develop"]
  pull_request:
    branches: [ "master", "develop"]

jobs:
#  build-maven:
#    permissions: write-all
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: 'Set up JDK 17 for x64'
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        architecture: x64
#        cache: maven
#    - name: 'Build with Maven'
#      run: mvn -B verify
#
#    - name: 'Update dependency graph'
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
#
#  qodana:
#    runs-on: ubuntu-latest
#    needs: build-maven
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: 'Qodana Scan'
#        uses: JetBrains/qodana-action@v2023.3
#        env:
#          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
#        with:
#          args: --baseline,qodana.sarif.json,--property=project.open.type=Maven
#
#  analyze:
#    name: Analyze
#    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
#    needs: build-maven
#    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
#
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#
#    strategy:
#      fail-fast: false
#      matrix:
#        language: [ 'java-kotlin' ]
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v3
#        with:
#          languages: ${{ matrix.language }}
#
#      - name: Build Java Maven Project
#        uses: actions/checkout@v3
#      - name: 'Set up JDK 17 for x64'
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          architecture: x64
#          cache: maven
#      - name: 'Build with Maven'
#        run: mvn -B verify
#
#      - name: Perform CodeQL Analysis
#        uses: github/codeql-action/analyze@v3
#        with:
#          category: "/language:${{matrix.language}}"

  build-container:
    runs-on: ubuntu-latest
    # needs: [qodana, analyze]

    steps:
      - uses: actions/checkout@v3
      - name: 'Build with Maven'
        run: mvn -B verify -Dmaven.compiler.source=17 -Dmaven.compiler.target=17
      - name: 'Build Docker Image'
        working-directory: ./vocalia
        run: docker build . --file Dockerfile --tag vocalia:${date +%s}
      - name: 'Push Docker Image'
        run: docker push vocalia
